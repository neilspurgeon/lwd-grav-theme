@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

* {
  box-sizing: border-box; }

html {
  background-color: #f4f3f1; }

body {
  margin: .5em 20px 0;
  color: #4e4c4a; }

a {
  text-decoration: none;
  color: #4e4c4a; }

a.styled-link {
  transition: .3s ease;
  border-bottom: 1px solid rgba(78, 76, 74, 0); }

a.styled-link:hover {
  border-bottom: 1px solid #4e4c4a; }

@font-face {
  font-family: 'Maison';
  src: url("../assets/fonts/MaisonNeueWEB-Book.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'Maison';
  src: url("../assets/fonts/MaisonNeueWEB-Demi.woff") format("woff");
  font-weight: bold;
  font-style: normal; }
/* $rembase = 10px */
html {
  font-size: 13px;
  line-height: 1.4; }

body {
  font-family: "Maison", Helvetica, sans-serif;
  font-size: 1.0rem;
  /* 10 รท $rembase */ }

h1,
h2 {
  font-size: 1.1rem;
  /* 11 รท $rembase */
  font-weight: bold; }

h3,
h4 {
  font-size: 1.0rem;
  /* 10 รท $rembase */
  font-weight: bold; }

.main-nav-container {
  width: calc(100vw - (20px * 2));
  margin: 0 20px;
  height: 5em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  text-transform: uppercase; }
  .main-nav-container .left-nav, .main-nav-container .right-nav {
    display: inline-block; }
  .main-nav-container h1,
  .main-nav-container .site-title {
    font-size: 1.6rem; }
  .main-nav-container li {
    display: inline-block;
    padding-left: 1em; }
  .main-nav-container a {
    color: #4e4c4a; }
  .main-nav-container a.active h2 {
    border-bottom: 1.6px solid #4e4c4a; }
  @media (max-width: 400px) {
    .main-nav-container ul.right-nav {
      padding: 0; } }
  @media screen and (max-width: 320px) {
    .main-nav-container h1,
    .main-nav-container .site-title {
      font-size: 1.1rem; }
    .main-nav-container h2 {
      font-size: .9rem; } }

.right-nav a h2 {
  transition: .3s ease;
  border-bottom: 1.6px solid rgba(78, 76, 74, 0); }
.right-nav a:hover h2 {
  border-bottom: 1.6px solid #4e4c4a; }

.nav-bg {
  z-index: 999;
  background-color: #f4f3f1;
  width: 100%;
  height: 5em;
  position: fixed;
  left: 0;
  top: 0; }
  @media (max-width: 400px) {
    .nav-bg {
      height: 4em; } }

.main-container {
  margin-top: 5em; }

@media all {
  .featherlight {
    display: none;
    /* dimensions: spanning the background from edge to edge */
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2147483647;
    /* z-index needs to be >= elements on the site. */
    /* position: centering content */
    text-align: center;
    /* insures that the ::before pseudo element doesn't force wrap with fixed width content; */
    white-space: nowrap;
    /* styling */
    cursor: pointer;
    background: #262421;
    /* IE8 "hack" for nested featherlights */
    background: transparent; }

  /* support for nested featherlights. Does not work in IE8 (use JS to fix) */
  .featherlight:last-of-type {
    background: #262421; }

  .featherlight:before {
    /* position: trick to center content vertically */
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    margin: 0; }

  .featherlight .featherlight-content {
    /* make content container for positioned elements (close button) */
    position: relative;
    /* position: centering vertical and horizontal */
    text-align: left;
    vertical-align: middle;
    display: inline-block;
    /* dimensions: cut off images */
    overflow: auto;
    padding: 0;
    border: none;
    /* dimensions: handling large content */
    margin: 0;
    max-height: calc(100vh - 40px);
    /* styling */
    background: #fff;
    cursor: url(../images/r-arrow.svg), auto;
    /* reset white-space wrapping */
    white-space: normal; }

  /* contains the content */
  .featherlight .featherlight-inner {
    /* make sure its visible */
    display: block; }

  .featherlight .featherlight-close-icon {
    /* position: centering vertical and horizontal */
    position: fixed;
    z-index: 9999;
    top: 2rem;
    right: 2rem;
    /* dimensions: 25px x 25px */
    line-height: 25px;
    width: 25px;
    content: "";
    /* styling */
    cursor: pointer;
    text-align: center;
    font-family: Arial, sans-serif;
    font-size: 35px;
    background: none;
    color: #f4f3f1; }

  .featherlight .featherlight-image {
    /* styling */
    width: 100%; }

  .featherlight-iframe .featherlight-content {
    /* removed the border for image croping since iframe is edge to edge */
    border-bottom: 0;
    padding: 0; }

  .featherlight iframe {
    /* styling */
    border: none; } }
/* handling phones and small screens */
@media only screen and (max-width: 1024px) {
  .featherlight .featherlight-content {
    /* dimensions: maximize lightbox with for small screens */
    margin-left: 0;
    margin-right: 0;
    max-height: 100%;
    padding: 0;
    border-bottom: 0; } }
.featherlight-previous,
.featherlight-next {
  position: fixed;
  width: 50vw;
  height: 100vh;
  top: 0;
  background: none;
  opacity: 0; }

.featherlight-previous {
  left: 0;
  cursor: url(../images/l-arrow.svg), auto; }

.featherlight-next {
  left: 50%;
  cursor: url(../images/r-arrow.svg), auto; }

.work-grid-container {
  width: 100%;
  overflow-x: hidden;
  padding-bottom: 50px; }

.work-grid {
  margin: 0 auto;
  width: calc(100% + 20px); }

/* clear fix */
.work-grid:after {
  content: '';
  display: block;
  clear: both; }

.grid-item {
  position: relative;
  float: left;
  width: 100%;
  padding-bottom: 70%;
  background-color: gray;
  background-size: cover;
  background-position: center;
  overflow: hidden; }
  @media screen and (min-width: 600px) {
    .grid-item {
      width: calc(50% - 20px);
      padding-bottom: 35%; } }
  @media screen and (min-width: 1000px) {
    .grid-item {
      width: calc(20% - 20px);
      padding-bottom: 12%; } }
  .grid-item img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover; }

.grid-project-title {
  position: absolute;
  bottom: 0;
  width: 100%;
  padding: 1em;
  background-color: rgba(255, 255, 255, 0.65);
  font-size: 12px;
  color: #3a3835;
  transition: .2s ease; }
  @media screen and (min-width: 600px) {
    .grid-project-title {
      -webkit-transform: translateY(3.3em);
              transform: translateY(3.3em); } }
  .grid-project-title .client {
    text-transform: uppercase;
    font-weight: bold;
    padding-right: .5em; }

@media screen and (min-width: 600px) {
  .grid-item:hover .grid-project-title {
    -webkit-transform: translateY(0);
            transform: translateY(0); } }

.sm-portrait {
  width: 100%;
  padding-bottom: 100%; }
  .sm-portrait img {
    object-position: top; }
  @media screen and (min-width: 600px) {
    .sm-portrait {
      width: calc(50% - 20px);
      padding-bottom: 75%; }
      .sm-portrait img {
        object-position: center; } }
  @media screen and (min-width: 1000px) {
    .sm-portrait {
      width: calc(20% - 20px);
      padding-bottom: 30%; }
      .sm-portrait img {
        object-position: center; } }

.lg-landscape {
  width: 100%;
  padding-bottom: 70%; }
  @media screen and (min-width: 600px) {
    .lg-landscape {
      width: calc(50% - 20px);
      padding-bottom: 35%; } }
  @media screen and (min-width: 1000px) {
    .lg-landscape {
      width: calc(40% - 20px);
      padding-bottom: 24%; } }

.project-info {
  width: 100%; }
  @media screen and (min-width: 1000px) {
    .project-info {
      width: 20vw;
      position: fixed;
      height: calc(93vh - 5em);
      overflow-y: scroll; } }
  .project-info h1.client {
    font-size: 1.1rem;
    font-weight: bold;
    margin: 0; }
  .project-info h2.title {
    font-size: 1rem;
    font-weight: normal;
    margin-top: 0; }
  .project-info h3 {
    margin-bottom: 0; }
  .project-info ul {
    padding: 0;
    margin-bottom: 0; }
  .project-info li {
    list-style: none; }
  .project-info a {
    transition: .3s ease;
    border-bottom: 1px solid rgba(78, 76, 74, 0); }
  .project-info a:hover {
    border-bottom: 1px solid #4e4c4a; }

.footer-push {
  padding-bottom: 30px; }

footer.lg-footer {
  display: none; }
  footer.lg-footer p {
    margin: 0; }

@media screen and (min-width: 1000px) {
  footer.sm-footer {
    display: none; }

  .footer-push {
    min-height: calc(93vh - 9.2em); }

  footer.lg-footer {
    display: inline-block; } }
.horizontal-scroll {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .horizontal-scroll p {
    margin: 0; }
  .horizontal-scroll a {
    margin-right: 20px; }
  .horizontal-scroll a:last-child {
    margin-right: 0px; }
  .horizontal-scroll img {
    margin-right: 20px; }
  .horizontal-scroll img:last-child {
    margin-right: 0px; }
  .horizontal-scroll img {
    width: 100%;
    margin-bottom: 15px; }
  @media screen and (min-width: 1000px) {
    .horizontal-scroll {
      margin-left: calc( 20vw + 20px );
      overflow: scroll;
      white-space: nowrap; }
      .horizontal-scroll img {
        display: inline-block;
        width: auto;
        height: calc(93vh - 5em);
        margin-bottom: 0; }
      .horizontal-scroll .project-img-end {
        position: absolute;
        display: inline-block;
        width: 100%;
        height: calc(93vh - 5em);
        background-color: #4e4c4a; } }

.pagination {
  display: none; }
  @media screen and (min-width: 1000px) {
    .pagination {
      display: inline-block;
      position: fixed;
      bottom: 8vh;
      left: calc(20vw + 55px); }
      .pagination a {
        color: #FFF;
        margin-right: 1em;
        opacity: .5; }
      .pagination a.active {
        opacity: 1; } }

.contact {
  margin: 20vh auto 0;
  max-width: 25em;
  text-align: center; }

.info-container p:first-child {
  margin-top: 0; }



/*# sourceMappingURL=data:application/json;base64, */
