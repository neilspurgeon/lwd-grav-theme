@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

* {
  box-sizing: border-box; }

html {
  background-color: #f4f3f1; }

body {
  margin: .5em 20px 0;
  color: #4e4c4a; }

a {
  text-decoration: none;
  color: #4e4c4a; }

a.styled-link {
  transition: .3s ease;
  border-bottom: 1px solid rgba(78, 76, 74, 0); }

a.styled-link:hover {
  border-bottom: 1px solid #4e4c4a; }

@font-face {
  font-family: 'Maison';
  src: url("../assets/fonts/MaisonNeueWEB-Book.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'Maison';
  src: url("../assets/fonts/MaisonNeueWEB-Demi.woff") format("woff");
  font-weight: bold;
  font-style: normal; }
/* $rembase = 10px */
html {
  font-size: 13px;
  line-height: 1.4; }

body {
  font-family: "Maison", Helvetica, sans-serif;
  font-size: 1.0rem;
  /* 10 รท $rembase */ }

h1,
h2 {
  font-size: 1.1rem;
  /* 11 รท $rembase */
  font-weight: bold; }

h3,
h4 {
  font-size: 1.0rem;
  /* 10 รท $rembase */
  font-weight: bold; }

.main-nav-container {
  width: calc(100vw - (20px * 2));
  margin: 0 20px;
  height: 5em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  text-transform: uppercase; }
  .main-nav-container .left-nav, .main-nav-container .right-nav {
    display: inline-block; }
  .main-nav-container h1.site-title {
    font-size: 1.6rem; }
  .main-nav-container li {
    display: inline-block;
    padding-left: 1em; }
  .main-nav-container a {
    color: #4e4c4a; }
  .main-nav-container a.active h2 {
    border-bottom: 1.6px solid #4e4c4a; }
  @media (max-width: 400px) {
    .main-nav-container h1.site-title {
      font-size: 1.3rem; }
    .main-nav-container h1, .main-nav-container h2 {
      font-size: 80%; }
    .main-nav-container ul.right-nav {
      padding: 0; } }
  @media (max-width: 300px) {
    .main-nav-container h1.site-title {
      font-size: 1rem; }
    .main-nav-container h2 {
      font-size: .7rem; } }

.nav-bg {
  z-index: 999;
  background-color: #f4f3f1;
  width: 100%;
  height: 5em;
  position: fixed;
  left: 0;
  top: 0; }
  @media (max-width: 400px) {
    .nav-bg {
      height: 4em; } }

.main-container {
  margin-top: 5em; }

@media all {
  .featherlight {
    display: none;
    /* dimensions: spanning the background from edge to edge */
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2147483647;
    /* z-index needs to be >= elements on the site. */
    /* position: centering content */
    text-align: center;
    /* insures that the ::before pseudo element doesn't force wrap with fixed width content; */
    white-space: nowrap;
    /* styling */
    cursor: pointer;
    background: #262421;
    /* IE8 "hack" for nested featherlights */
    background: transparent; }

  /* support for nested featherlights. Does not work in IE8 (use JS to fix) */
  .featherlight:last-of-type {
    background: #262421; }

  .featherlight:before {
    /* position: trick to center content vertically */
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    margin: 0; }

  .featherlight .featherlight-content {
    /* make content container for positioned elements (close button) */
    position: relative;
    /* position: centering vertical and horizontal */
    text-align: left;
    vertical-align: middle;
    display: inline-block;
    /* dimensions: cut off images */
    overflow: auto;
    padding: 0;
    border: none;
    /* dimensions: handling large content */
    margin: 0;
    max-height: calc(100vh - 40px);
    /* styling */
    background: #fff;
    cursor: auto;
    /* reset white-space wrapping */
    white-space: normal; }

  /* contains the content */
  .featherlight .featherlight-inner {
    /* make sure its visible */
    display: block; }

  .featherlight .featherlight-close-icon {
    /* position: centering vertical and horizontal */
    position: fixed;
    z-index: 9999;
    top: 2rem;
    right: 2rem;
    /* dimensions: 25px x 25px */
    line-height: 25px;
    width: 25px;
    content: "";
    /* styling */
    cursor: pointer;
    text-align: center;
    font-family: Arial, sans-serif;
    font-size: 35px;
    background: none;
    color: #f4f3f1; }

  .featherlight .featherlight-image {
    /* styling */
    width: 100%; }

  .featherlight-iframe .featherlight-content {
    /* removed the border for image croping since iframe is edge to edge */
    border-bottom: 0;
    padding: 0; }

  .featherlight iframe {
    /* styling */
    border: none; } }
/* handling phones and small screens */
@media only screen and (max-width: 1024px) {
  .featherlight .featherlight-content {
    /* dimensions: maximize lightbox with for small screens */
    margin-left: 0;
    margin-right: 0;
    max-height: 100%;
    padding: 0;
    border-bottom: 0; } }
.featherlight-previous,
.featherlight-next {
  display: none; }

.work-grid-container {
  width: 100%;
  overflow-x: hidden; }

.work-grid {
  margin: 0 auto;
  width: calc(100% + 20px); }

/* clear fix */
.work-grid:after {
  content: '';
  display: block;
  clear: both; }

.grid-item {
  position: relative;
  float: left;
  width: 100%;
  padding-bottom: 70%;
  background-color: gray;
  background-size: cover;
  background-position: center;
  overflow: hidden; }
  @media (min-width: 600px) {
    .grid-item {
      width: calc(50% - 20px);
      padding-bottom: 35%; } }
  @media (min-width: 1000px) {
    .grid-item {
      width: calc(20% - 20px);
      padding-bottom: 12%; } }
  .grid-item img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover; }

.grid-project-title {
  position: absolute;
  bottom: 0;
  width: 100%;
  padding: 1em;
  background-color: rgba(255, 255, 255, 0.65);
  font-size: 12px;
  color: #3a3835;
  transition: .2s ease; }
  @media (min-width: 600px) {
    .grid-project-title {
      -webkit-transform: translateY(3.2em);
              transform: translateY(3.2em); } }
  .grid-project-title .client {
    text-transform: uppercase;
    font-weight: bold;
    padding-right: .5em; }

@media (min-width: 600px) {
  .grid-item:hover .grid-project-title {
    -webkit-transform: translateY(0);
            transform: translateY(0); } }

.sm-portrait {
  width: 100%;
  padding-bottom: 100%; }
  .sm-portrait img {
    object-position: top; }
  @media (min-width: 600px) {
    .sm-portrait {
      width: calc(50% - 20px);
      padding-bottom: 75%; }
      .sm-portrait img {
        object-position: center; } }
  @media (min-width: 1000px) {
    .sm-portrait {
      width: calc(20% - 20px);
      padding-bottom: 30%; }
      .sm-portrait img {
        object-position: center; } }

.lg-landscape {
  width: 100%;
  padding-bottom: 70%; }
  @media (min-width: 600px) {
    .lg-landscape {
      width: calc(50% - 20px);
      padding-bottom: 35%; } }
  @media (min-width: 1000px) {
    .lg-landscape {
      width: calc(40% - 20px);
      padding-bottom: 24%; } }

.project-info {
  width: 100%; }
  @media (min-width: 1000px) {
    .project-info {
      width: 20vw;
      position: fixed; } }
  .project-info h1.client {
    font-size: 1.1rem;
    font-weight: bold;
    margin-bottom: 0; }
  .project-info h2.title {
    font-size: 1rem;
    font-weight: normal;
    margin-top: 0; }
  .project-info h3 {
    margin-bottom: 0; }
  .project-info ul {
    padding: 0; }
  .project-info li {
    list-style: none; }
  .project-info a {
    transition: .3s ease;
    border-bottom: 1px solid rgba(78, 76, 74, 0); }
  .project-info a:hover {
    border-bottom: 1px solid #4e4c4a; }

.horizontal-scroll {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .horizontal-scroll a {
    margin-right: 20px; }
  .horizontal-scroll a:last-child {
    margin-right: 0px; }
  .horizontal-scroll img {
    margin-right: 20px; }
  .horizontal-scroll img:last-child {
    margin-right: 0px; }
  .horizontal-scroll img {
    width: 100%;
    margin-bottom: 15px; }
  @media (min-width: 1000px) {
    .horizontal-scroll {
      margin-left: calc( 20vw + 20px );
      overflow: scroll;
      white-space: nowrap; }
      .horizontal-scroll img {
        display: inline-block;
        width: auto;
        height: calc(93vh - 5em);
        margin-bottom: 0; }
      .horizontal-scroll .project-img-end {
        position: absolute;
        display: inline-block;
        width: 100%;
        height: calc(93vh - 5em);
        background-color: #4e4c4a; } }

.pagination {
  display: none; }
  @media (min-width: 1000px) {
    .pagination {
      display: inline-block;
      position: fixed;
      bottom: 8vh;
      left: calc(20vw + 55px); }
      .pagination a {
        color: #FFF;
        margin-right: 1em;
        opacity: .5; }
      .pagination a.active {
        opacity: 1; } }

.contact {
  margin: 15vh auto 0;
  max-width: 25em;
  text-align: center; }

.info-container p:first-child {
  margin-top: 0; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwidmVuZG9ycy9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL19nbG9iYWxzLnNjc3MiLCJiYXNlL19jb2xvcnMuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImxheW91dC9fbmF2aWdhdGlvbi5zY3NzIiwibGF5b3V0L19saWdodGJveC5zY3NzIiwicGFnZXMvX2hvbWUuc2NzcyIsInBhZ2VzL19wcm9qZWN0LnNjc3MiLCJwYWdlcy9fY29udGFjdC5zY3NzIiwicGFnZXMvX2luZm8uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUFDakIsNEVBQTRFO0FBQzVFOzs7O0dBSUc7QUNFSDtFQUNFLHdCQUF1QjtFREF2QixPQUFPO0VDQ1AsMkJBQTBCO0VEQzFCLE9BQU87RUNBUCwrQkFBOEI7RURFOUIsT0FBTyxFQUFFOztBQUVYOztHQUVHO0FDQ0g7RUFDRSxVQUFTLEVBQUE7O0FERVg7Z0ZBQ2dGO0FBQ2hGOzs7OztHQUtHO0FDSUg7Ozs7Ozs7Ozs7Ozs7RUFhRSxlQUFjLEVBQUE7O0FERGhCOzs7R0FHRztBQ01IOzs7O0VBSUUsc0JBQXFCO0VESnJCLE9BQU87RUNLUCx5QkFBd0I7RURIeEIsT0FBTyxFQUFFOztBQUVYOzs7R0FHRztBQ01IO0VBQ0UsY0FBYTtFQUNiLFVBQVMsRUFBQTs7QURIWDs7O0dBR0c7QUNRSDs7RUFFRSxjQUFhLEVBQUE7O0FETGY7Z0ZBQ2dGO0FBQ2hGOztHQUVHO0FDV0g7RUFDRSw4QkFBNkIsRUFBQTs7QURSL0I7OztHQUdHO0FDYUg7O0VBRUUsV0FBVSxFQUFBOztBRFZaO2dGQUNnRjtBQUNoRjs7R0FFRztBQ2dCSDtFQUNFLDBCQUF5QixFQUFBOztBRGIzQjs7R0FFRztBQ2tCSDs7RUFFRSxrQkFBaUIsRUFBQTs7QURmbkI7O0dBRUc7QUNvQkg7RUFDRSxtQkFBa0IsRUFBQTs7QURqQnBCOzs7R0FHRztBQ3NCSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFBQTs7QURuQmxC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Q0ZsQjtFQUNFLGNBQWEsRUFBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIGFuZCBJRSB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIGRldmljZSBvcmllbnRhdGlvbiBjaGFuZ2UsXG4gKiAgICB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjNmMTsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAuNWVtIDIwcHggMDtcbiAgY29sb3I6ICM0ZTRjNGE7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICM0ZTRjNGE7IH1cblxuYS5zdHlsZWQtbGluayB7XG4gIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSg3OCwgNzYsIDc0LCAwKTsgfVxuXG5hLnN0eWxlZC1saW5rOmhvdmVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM0ZTRjNGE7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTWFpc29uJztcbiAgc3JjOiB1cmwoXCIuLi9hc3NldHMvZm9udHMvTWFpc29uTmV1ZVdFQi1Cb29rLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdNYWlzb24nO1xuICBzcmM6IHVybChcIi4uL2Fzc2V0cy9mb250cy9NYWlzb25OZXVlV0VCLURlbWkud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG4vKiAkcmVtYmFzZSA9IDEwcHggKi9cbmh0bWwge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1haXNvblwiLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4wcmVtO1xuICAvKiAxMCDDtyAkcmVtYmFzZSAqLyB9XG5cbmgxLFxuaDIge1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgLyogMTEgw7cgJHJlbWJhc2UgKi9cbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuaDMsXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4wcmVtO1xuICAvKiAxMCDDtyAkcmVtYmFzZSAqL1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4ubWFpbi1uYXYtY29udGFpbmVyIHtcbiAgd2lkdGg6IGNhbGMoMTAwdncgLSAoMjBweCAqIDIpKTtcbiAgbWFyZ2luOiAwIDIwcHg7XG4gIGhlaWdodDogNWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAubWFpbi1uYXYtY29udGFpbmVyIC5sZWZ0LW5hdiwgLm1haW4tbmF2LWNvbnRhaW5lciAucmlnaHQtbmF2IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLm1haW4tbmF2LWNvbnRhaW5lciBoMS5zaXRlLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTsgfVxuICAubWFpbi1uYXYtY29udGFpbmVyIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07IH1cbiAgLm1haW4tbmF2LWNvbnRhaW5lciBhIHtcbiAgICBjb2xvcjogIzRlNGM0YTsgfVxuICAubWFpbi1uYXYtY29udGFpbmVyIGEuYWN0aXZlIGgyIHtcbiAgICBib3JkZXItYm90dG9tOiAxLjZweCBzb2xpZCAjNGU0YzRhOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgIC5tYWluLW5hdi1jb250YWluZXIgaDEuc2l0ZS10aXRsZSB7XG4gICAgICBmb250LXNpemU6IDEuM3JlbTsgfVxuICAgIC5tYWluLW5hdi1jb250YWluZXIgaDEsIC5tYWluLW5hdi1jb250YWluZXIgaDIge1xuICAgICAgZm9udC1zaXplOiA4MCU7IH1cbiAgICAubWFpbi1uYXYtY29udGFpbmVyIHVsLnJpZ2h0LW5hdiB7XG4gICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDMwMHB4KSB7XG4gICAgLm1haW4tbmF2LWNvbnRhaW5lciBoMS5zaXRlLXRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfVxuICAgIC5tYWluLW5hdi1jb250YWluZXIgaDIge1xuICAgICAgZm9udC1zaXplOiAuN3JlbTsgfSB9XG5cbi5uYXYtYmcge1xuICB6LWluZGV4OiA5OTk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGYzZjE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDVlbTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgLm5hdi1iZyB7XG4gICAgICBoZWlnaHQ6IDRlbTsgfSB9XG5cbi5tYWluLWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDVlbTsgfVxuXG5AbWVkaWEgYWxsIHtcbiAgLmZlYXRoZXJsaWdodCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICAvKiBkaW1lbnNpb25zOiBzcGFubmluZyB0aGUgYmFja2dyb3VuZCBmcm9tIGVkZ2UgdG8gZWRnZSAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMjE0NzQ4MzY0NztcbiAgICAvKiB6LWluZGV4IG5lZWRzIHRvIGJlID49IGVsZW1lbnRzIG9uIHRoZSBzaXRlLiAqL1xuICAgIC8qIHBvc2l0aW9uOiBjZW50ZXJpbmcgY29udGVudCAqL1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAvKiBpbnN1cmVzIHRoYXQgdGhlIDo6YmVmb3JlIHBzZXVkbyBlbGVtZW50IGRvZXNuJ3QgZm9yY2Ugd3JhcCB3aXRoIGZpeGVkIHdpZHRoIGNvbnRlbnQ7ICovXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAvKiBzdHlsaW5nICovXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6ICMyNjI0MjE7XG4gICAgLyogSUU4IFwiaGFja1wiIGZvciBuZXN0ZWQgZmVhdGhlcmxpZ2h0cyAqL1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbiAgLyogc3VwcG9ydCBmb3IgbmVzdGVkIGZlYXRoZXJsaWdodHMuIERvZXMgbm90IHdvcmsgaW4gSUU4ICh1c2UgSlMgdG8gZml4KSAqL1xuICAuZmVhdGhlcmxpZ2h0Omxhc3Qtb2YtdHlwZSB7XG4gICAgYmFja2dyb3VuZDogIzI2MjQyMTsgfVxuXG4gIC5mZWF0aGVybGlnaHQ6YmVmb3JlIHtcbiAgICAvKiBwb3NpdGlvbjogdHJpY2sgdG8gY2VudGVyIGNvbnRlbnQgdmVydGljYWxseSAqL1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBtYXJnaW46IDA7IH1cblxuICAuZmVhdGhlcmxpZ2h0IC5mZWF0aGVybGlnaHQtY29udGVudCB7XG4gICAgLyogbWFrZSBjb250ZW50IGNvbnRhaW5lciBmb3IgcG9zaXRpb25lZCBlbGVtZW50cyAoY2xvc2UgYnV0dG9uKSAqL1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAvKiBwb3NpdGlvbjogY2VudGVyaW5nIHZlcnRpY2FsIGFuZCBob3Jpem9udGFsICovXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvKiBkaW1lbnNpb25zOiBjdXQgb2ZmIGltYWdlcyAqL1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIC8qIGRpbWVuc2lvbnM6IGhhbmRsaW5nIGxhcmdlIGNvbnRlbnQgKi9cbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpO1xuICAgIC8qIHN0eWxpbmcgKi9cbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGN1cnNvcjogYXV0bztcbiAgICAvKiByZXNldCB3aGl0ZS1zcGFjZSB3cmFwcGluZyAqL1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cblxuICAvKiBjb250YWlucyB0aGUgY29udGVudCAqL1xuICAuZmVhdGhlcmxpZ2h0IC5mZWF0aGVybGlnaHQtaW5uZXIge1xuICAgIC8qIG1ha2Ugc3VyZSBpdHMgdmlzaWJsZSAqL1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbiAgLmZlYXRoZXJsaWdodCAuZmVhdGhlcmxpZ2h0LWNsb3NlLWljb24ge1xuICAgIC8qIHBvc2l0aW9uOiBjZW50ZXJpbmcgdmVydGljYWwgYW5kIGhvcml6b250YWwgKi9cbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogOTk5OTtcbiAgICB0b3A6IDJyZW07XG4gICAgcmlnaHQ6IDJyZW07XG4gICAgLyogZGltZW5zaW9uczogMjVweCB4IDI1cHggKi9cbiAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICB3aWR0aDogMjVweDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIC8qIHN0eWxpbmcgKi9cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBjb2xvcjogI2Y0ZjNmMTsgfVxuXG4gIC5mZWF0aGVybGlnaHQgLmZlYXRoZXJsaWdodC1pbWFnZSB7XG4gICAgLyogc3R5bGluZyAqL1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbiAgLmZlYXRoZXJsaWdodC1pZnJhbWUgLmZlYXRoZXJsaWdodC1jb250ZW50IHtcbiAgICAvKiByZW1vdmVkIHRoZSBib3JkZXIgZm9yIGltYWdlIGNyb3Bpbmcgc2luY2UgaWZyYW1lIGlzIGVkZ2UgdG8gZWRnZSAqL1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgcGFkZGluZzogMDsgfVxuXG4gIC5mZWF0aGVybGlnaHQgaWZyYW1lIHtcbiAgICAvKiBzdHlsaW5nICovXG4gICAgYm9yZGVyOiBub25lOyB9IH1cbi8qIGhhbmRsaW5nIHBob25lcyBhbmQgc21hbGwgc2NyZWVucyAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZlYXRoZXJsaWdodCAuZmVhdGhlcmxpZ2h0LWNvbnRlbnQge1xuICAgIC8qIGRpbWVuc2lvbnM6IG1heGltaXplIGxpZ2h0Ym94IHdpdGggZm9yIHNtYWxsIHNjcmVlbnMgKi9cbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlci1ib3R0b206IDA7IH0gfVxuLmZlYXRoZXJsaWdodC1wcmV2aW91cyxcbi5mZWF0aGVybGlnaHQtbmV4dCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLndvcmstZ3JpZC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuOyB9XG5cbi53b3JrLWdyaWQge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IGNhbGMoMTAwJSArIDIwcHgpOyB9XG5cbi8qIGNsZWFyIGZpeCAqL1xuLndvcmstZ3JpZDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmdyaWQtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgLmdyaWQtaXRlbSB7XG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSAyMHB4KTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAzNSU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLmdyaWQtaXRlbSB7XG4gICAgICB3aWR0aDogY2FsYygyMCUgLSAyMHB4KTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMiU7IH0gfVxuICAuZ3JpZC1pdGVtIGltZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG4uZ3JpZC1wcm9qZWN0LXRpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42NSk7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICMzYTM4MzU7XG4gIHRyYW5zaXRpb246IC4ycyBlYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAgIC5ncmlkLXByb2plY3QtdGl0bGUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMuMmVtKTsgfSB9XG4gIC5ncmlkLXByb2plY3QtdGl0bGUgLmNsaWVudCB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAuNWVtOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAuZ3JpZC1pdGVtOmhvdmVyIC5ncmlkLXByb2plY3QtdGl0bGUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfSB9XG5cbi5zbS1wb3J0cmFpdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwJTsgfVxuICAuc20tcG9ydHJhaXQgaW1nIHtcbiAgICBvYmplY3QtcG9zaXRpb246IHRvcDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgICAuc20tcG9ydHJhaXQge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMjBweCk7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG4gICAgICAuc20tcG9ydHJhaXQgaW1nIHtcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLnNtLXBvcnRyYWl0IHtcbiAgICAgIHdpZHRoOiBjYWxjKDIwJSAtIDIwcHgpO1xuICAgICAgcGFkZGluZy1ib3R0b206IDMwJTsgfVxuICAgICAgLnNtLXBvcnRyYWl0IGltZyB7XG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyOyB9IH1cblxuLmxnLWxhbmRzY2FwZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogNzAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAgIC5sZy1sYW5kc2NhcGUge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMjBweCk7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMzUlOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5sZy1sYW5kc2NhcGUge1xuICAgICAgd2lkdGg6IGNhbGMoNDAlIC0gMjBweCk7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjQlOyB9IH1cblxuLnByb2plY3QtaW5mbyB7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgICAucHJvamVjdC1pbmZvIHtcbiAgICAgIHdpZHRoOiAyMHZ3O1xuICAgICAgcG9zaXRpb246IGZpeGVkOyB9IH1cbiAgLnByb2plY3QtaW5mbyBoMS5jbGllbnQge1xuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLnByb2plY3QtaW5mbyBoMi50aXRsZSB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luLXRvcDogMDsgfVxuICAucHJvamVjdC1pbmZvIGgzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIC5wcm9qZWN0LWluZm8gdWwge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLnByb2plY3QtaW5mbyBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAucHJvamVjdC1pbmZvIGEge1xuICAgIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDc4LCA3NiwgNzQsIDApOyB9XG4gIC5wcm9qZWN0LWluZm8gYTpob3ZlciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM0ZTRjNGE7IH1cblxuLmhvcml6b250YWwtc2Nyb2xsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5ob3Jpem9udGFsLXNjcm9sbCBhIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cbiAgLmhvcml6b250YWwtc2Nyb2xsIGE6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7IH1cbiAgLmhvcml6b250YWwtc2Nyb2xsIGltZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG4gIC5ob3Jpem9udGFsLXNjcm9sbCBpbWc6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwcHg7IH1cbiAgLmhvcml6b250YWwtc2Nyb2xsIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gICAgLmhvcml6b250YWwtc2Nyb2xsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKCAyMHZ3ICsgMjBweCApO1xuICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgICAgIC5ob3Jpem9udGFsLXNjcm9sbCBpbWcge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoOTN2aCAtIDVlbSk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAgIC5ob3Jpem9udGFsLXNjcm9sbCAucHJvamVjdC1pbWctZW5kIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoOTN2aCAtIDVlbSk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0ZTRjNGE7IH0gfVxuXG4ucGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAgIC5wYWdpbmF0aW9uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIGJvdHRvbTogOHZoO1xuICAgICAgbGVmdDogY2FsYygyMHZ3ICsgNTVweCk7IH1cbiAgICAgIC5wYWdpbmF0aW9uIGEge1xuICAgICAgICBjb2xvcjogI0ZGRjtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgICAgIG9wYWNpdHk6IC41OyB9XG4gICAgICAucGFnaW5hdGlvbiBhLmFjdGl2ZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4uY29udGFjdCB7XG4gIG1hcmdpbjogMTV2aCBhdXRvIDA7XG4gIG1heC13aWR0aDogMjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5pbmZvLWNvbnRhaW5lciBwOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG5cbiIsIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59IiwiQGltcG9ydCAnY29sb3JzJztcblxuLy8gVmFyaWFibGVzXG4kc2lkZWJhci13aWR0aDogMjB2dztcbiRndXR0ZXItd2lkdGg6IDIwcHg7XG5cbiRzbS1icmVhazogMHB4O1xuJG1kLWJyZWFrOiA2MDBweDtcbiRsZy1icmVhazogMTAwMHB4O1xuXG5cbi8vIEdsb2JhbCBTdHlsaW5nXG4qIHsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfSBcblxuaHRtbCB7YmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmQtY29sb3I7fVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAgLjVlbSAyMHB4IDA7XG4gIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgLy8gb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogJHByaW1hcnktY29sb3I7XG59XG5cbmEuc3R5bGVkLWxpbmsge1xuICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoNzgsNzYsNzQsMCk7ICBcbn1cblxuYS5zdHlsZWQtbGluazpob3ZlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDc4LDc2LDc0LDEpOyAgXG59IiwiJHByaW1hcnktY29sb3I6ICM0ZTRjNGE7XG4kc2Vjb25kYXJ5LWNvbG9yOiAjM2EzODM1O1xuJGJhY2tncm91bmQtY29sb3I6ICNmNGYzZjE7XG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdNYWlzb24nO1xuICBzcmM6IHVybCgnLi4vYXNzZXRzL2ZvbnRzL01haXNvbk5ldWVXRUItQm9vay53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgXG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ01haXNvbic7XG4gIHNyYzogdXJsKCcuLi9hc3NldHMvZm9udHMvTWFpc29uTmV1ZVdFQi1EZW1pLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgXG59XG5cbiRmb250LXN0YWNrOiAnTWFpc29uJywgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuJGxpbmUtaGVpZ2h0OiAxLjQ7XG4kYmFzZS1mb250LXdlaWdodDogbm9ybWFsO1xuXG4vKiAkcmVtYmFzZSA9IDEwcHggKi9cbmh0bWwge1xuICBmb250LXNpemU6IDEzcHg7XG4gIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJGZvbnQtc3RhY2s7XG4gIGZvbnQtc2l6ZTogMS4wcmVtOyAvKiAxMCDDtyAkcmVtYmFzZSAqL1xufVxuXG5oMSxcbmgyIHtcbiAgZm9udC1zaXplOiAxLjFyZW07IC8qIDExIMO3ICRyZW1iYXNlICovXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5oMyxcbmg0IHtcbiAgZm9udC1zaXplOiAxLjByZW07IC8qIDEwIMO3ICRyZW1iYXNlICovXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSIsIi5tYWluLW5hdi1jb250YWluZXIge1xuICB3aWR0aDogY2FsYygxMDB2dyAtICgjeyRndXR0ZXItd2lkdGh9ICogMikpO1xuICBtYXJnaW46IDAgJGd1dHRlci13aWR0aDtcbiAgaGVpZ2h0OiA1ZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAubGVmdC1uYXYsIC5yaWdodC1uYXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICBoMS5zaXRlLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICB9XG4gIGEge1xuICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgfVxuICBhLmFjdGl2ZSBoMntcbiAgICBib3JkZXItYm90dG9tOiAxLjZweCBzb2xpZCAkcHJpbWFyeS1jb2xvcjtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICBoMS5zaXRlLXRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgIH1cbiAgICBoMSwgaDIge1xuICAgICAgZm9udC1zaXplOiA4MCU7IFxuICAgIH1cbiAgICB1bC5yaWdodC1uYXYge1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDMwMHB4KSB7XG4gICAgaDEuc2l0ZS10aXRsZSB7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuICAgIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogLjdyZW07XG4gICAgfVxuICB9XG59XG5cbi5uYXYtYmcge1xuICB6LWluZGV4OiA5OTk7XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1ZW07XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICBoZWlnaHQ6IDRlbTtcbiAgfVxufVxuXG4ubWFpbi1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiA1ZW07XG59IiwiLmZlYXRoZXJsaWdodCAuZmVhdGhlcmxpZ2h0LWNvbnRlbnQge1xuICAvLyB3aWR0aDogMTAwdnc7XG4gIC8vIC8vIG1hcmdpbjogMCBhdXRvO1xuICAvLyBoZWlnaHQ6IDEwMHZoO1xuICAvLyBtYXgtaGVpZ2h0OiAxMDB2aDtcbiAgLy8gYmFja2dyb3VuZC1jb2xvcjogIzI2MjQyMTtcbn1cblxuQG1lZGlhIGFsbCB7XG4gIC5mZWF0aGVybGlnaHQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAvKiBkaW1lbnNpb25zOiBzcGFubmluZyB0aGUgYmFja2dyb3VuZCBmcm9tIGVkZ2UgdG8gZWRnZSAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7IHJpZ2h0OiAwOyBib3R0b206IDA7IGxlZnQ6IDA7XG4gICAgei1pbmRleDogMjE0NzQ4MzY0NzsgLyogei1pbmRleCBuZWVkcyB0byBiZSA+PSBlbGVtZW50cyBvbiB0aGUgc2l0ZS4gKi9cblxuICAgIC8qIHBvc2l0aW9uOiBjZW50ZXJpbmcgY29udGVudCAqL1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIC8qIGluc3VyZXMgdGhhdCB0aGUgOjpiZWZvcmUgcHNldWRvIGVsZW1lbnQgZG9lc24ndCBmb3JjZSB3cmFwIHdpdGggZml4ZWQgd2lkdGggY29udGVudDsgKi9cbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICAgLyogc3R5bGluZyAqL1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjMjYyNDIxO1xuICAgIC8qIElFOCBcImhhY2tcIiBmb3IgbmVzdGVkIGZlYXRoZXJsaWdodHMgKi9cbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApO1xuICB9XG5cbiAgLyogc3VwcG9ydCBmb3IgbmVzdGVkIGZlYXRoZXJsaWdodHMuIERvZXMgbm90IHdvcmsgaW4gSUU4ICh1c2UgSlMgdG8gZml4KSAqL1xuICAuZmVhdGhlcmxpZ2h0Omxhc3Qtb2YtdHlwZSB7XG4gICAgYmFja2dyb3VuZDogIzI2MjQyMTtcbiAgfVxuXG4gIC5mZWF0aGVybGlnaHQ6YmVmb3JlIHtcbiAgICAvKiBwb3NpdGlvbjogdHJpY2sgdG8gY2VudGVyIGNvbnRlbnQgdmVydGljYWxseSAqL1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICAuZmVhdGhlcmxpZ2h0IC5mZWF0aGVybGlnaHQtY29udGVudCB7XG4gICAgLyogbWFrZSBjb250ZW50IGNvbnRhaW5lciBmb3IgcG9zaXRpb25lZCBlbGVtZW50cyAoY2xvc2UgYnV0dG9uKSAqL1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIC8qIHBvc2l0aW9uOiBjZW50ZXJpbmcgdmVydGljYWwgYW5kIGhvcml6b250YWwgKi9cbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgLyogZGltZW5zaW9uczogY3V0IG9mZiBpbWFnZXMgKi9cbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTtcblxuICAgIC8qIGRpbWVuc2lvbnM6IGhhbmRsaW5nIGxhcmdlIGNvbnRlbnQgKi9cbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpO1xuXG4gICAgLyogc3R5bGluZyAqL1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgY3Vyc29yOiBhdXRvO1xuXG4gICAgLyogcmVzZXQgd2hpdGUtc3BhY2Ugd3JhcHBpbmcgKi9cbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICB9XG5cbiAgLyogY29udGFpbnMgdGhlIGNvbnRlbnQgKi9cbiAgLmZlYXRoZXJsaWdodCAuZmVhdGhlcmxpZ2h0LWlubmVyIHtcbiAgICAvKiBtYWtlIHN1cmUgaXRzIHZpc2libGUgKi9cbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5mZWF0aGVybGlnaHQgLmZlYXRoZXJsaWdodC1jbG9zZS1pY29uIHtcbiAgICAvKiBwb3NpdGlvbjogY2VudGVyaW5nIHZlcnRpY2FsIGFuZCBob3Jpem9udGFsICovXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDk5OTk7XG4gICAgdG9wOiAycmVtO1xuICAgIHJpZ2h0OiAycmVtO1xuICAgIC8qIGRpbWVuc2lvbnM6IDI1cHggeCAyNXB4ICovXG4gICAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgY29udGVudDogXCJcIjtcblxuICAgIC8qIHN0eWxpbmcgKi9cbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBjb2xvcjogI2Y0ZjNmMTtcbiAgfVxuXG5cbiAgLmZlYXRoZXJsaWdodCAuZmVhdGhlcmxpZ2h0LWltYWdlIHtcbiAgICAvKiBzdHlsaW5nICovXG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuXG4gIC5mZWF0aGVybGlnaHQtaWZyYW1lIC5mZWF0aGVybGlnaHQtY29udGVudCB7XG4gICAgLyogcmVtb3ZlZCB0aGUgYm9yZGVyIGZvciBpbWFnZSBjcm9waW5nIHNpbmNlIGlmcmFtZSBpcyBlZGdlIHRvIGVkZ2UgKi9cbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICAuZmVhdGhlcmxpZ2h0IGlmcmFtZSB7XG4gICAgLyogc3R5bGluZyAqL1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxufVxuXG4vKiBoYW5kbGluZyBwaG9uZXMgYW5kIHNtYWxsIHNjcmVlbnMgKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5mZWF0aGVybGlnaHQgLmZlYXRoZXJsaWdodC1jb250ZW50IHtcbiAgICAvKiBkaW1lbnNpb25zOiBtYXhpbWl6ZSBsaWdodGJveCB3aXRoIGZvciBzbWFsbCBzY3JlZW5zICovXG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG5cbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gIH1cbn1cblxuLmZlYXRoZXJsaWdodC1wcmV2aW91cywgXG4uZmVhdGhlcmxpZ2h0LW5leHQge1xuICBkaXNwbGF5OiBub25lO1xufSIsIi53b3JrLWdyaWQtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLndvcmstZ3JpZCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogY2FsYygxMDAlICsgMjBweCk7XG59XG5cbi8qIGNsZWFyIGZpeCAqL1xuLndvcmstZ3JpZDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi5ncmlkLWl0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206IDcwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBAbWVkaWEgKG1pbi13aWR0aDogJG1kLWJyZWFrKSB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gMjBweCk7XG4gICAgcGFkZGluZy1ib3R0b206IDM1JTtcbiAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogJGxnLWJyZWFrKSB7XG4gICAgd2lkdGg6IGNhbGMoMjAlIC0gMjBweCk7XG4gICAgcGFkZGluZy1ib3R0b206IDEyJTtcbiAgfVxuICBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXG4gICAgd2lkdGg6IDEwMCU7IFxuICAgIGhlaWdodDogMTAwJTsgXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG4gIH1cbn1cblxuLmdyaWQtcHJvamVjdC10aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC42NSk7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XG4gIHRyYW5zaXRpb246IC4ycyBlYXNlO1xuICBAbWVkaWEgKG1pbi13aWR0aDogJG1kLWJyZWFrKSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMuMmVtKTtcbiAgfVxuICAuY2xpZW50IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHBhZGRpbmctcmlnaHQ6IC41ZW07XG4gIH1cbiAgLnRpdGxlIHtcblxuICB9XG59XG5cbi5ncmlkLWl0ZW06aG92ZXIge1xuICAuZ3JpZC1wcm9qZWN0LXRpdGxlIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1kLWJyZWFrKSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgfVxuICB9XG59XG5cbi5zbS1wb3J0cmFpdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgaW1nIHtcbiAgICBvYmplY3QtcG9zaXRpb246IHRvcDtcbiAgfSBcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRtZC1icmVhaykge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIwcHgpO1xuICAgIHBhZGRpbmctYm90dG9tOiA3NSU7XG4gICAgaW1nIHtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgIH1cbiAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogJGxnLWJyZWFrKSB7XG4gICAgd2lkdGg6IGNhbGMoMjAlIC0gMjBweCk7XG4gICAgcGFkZGluZy1ib3R0b206IDMwJTtcbiAgICBpbWcge1xuICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgfVxuICB9XG59XG5cbi5sZy1sYW5kc2NhcGUge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206IDcwJTtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRtZC1icmVhaykge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIwcHgpO1xuICAgIHBhZGRpbmctYm90dG9tOiAzNSU7XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRsZy1icmVhaykge1xuICAgIHdpZHRoOiBjYWxjKDQwJSAtIDIwcHgpO1xuICAgIHBhZGRpbmctYm90dG9tOiAyNCU7XG4gIH1cbn0iLCIucHJvamVjdC1pbmZvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkbGctYnJlYWspIHtcbiAgICB3aWR0aDogJHNpZGViYXItd2lkdGg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICB9XG4gIGgxLmNsaWVudCB7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICBoMi50aXRsZSB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgfVxuICBhIHtcbiAgICB0cmFuc2l0aW9uOiAuM3MgZWFzZTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSg3OCw3Niw3NCwwKTsgIFxuICB9XG4gIGE6aG92ZXIge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDc4LDc2LDc0LDEpOyAgXG4gIH1cbn1cblxuLmhvcml6b250YWwtc2Nyb2xsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gIC8vIGlmIGxpZ2h0Ym94IGlzIG9uIGltZydzIGFyZSB3cmFwcGVkIGluIGEgdGFnXG4gIGEgeyBtYXJnaW4tcmlnaHQ6ICRndXR0ZXItd2lkdGg7IH1cbiAgYTpsYXN0LWNoaWxkIHsgbWFyZ2luLXJpZ2h0OiAwcHg7IH1cbiAgXG4gIC8vIGlmIGxpZ2h0Ym94IGlzIG9mZiBqdXN0IHRhcmdldCBpbWdcbiAgaW1nIHsgbWFyZ2luLXJpZ2h0OiAkZ3V0dGVyLXdpZHRoOyB9XG4gIGltZzpsYXN0LWNoaWxkIHsgbWFyZ2luLXJpZ2h0OiAwcHg7IH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRsZy1icmVhaykge1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKCAjeyRzaWRlYmFyLXdpZHRofSArICN7JGd1dHRlci13aWR0aH0gKTtcbiAgICBvdmVyZmxvdzogc2Nyb2xsO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgaW1nIHsgXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogY2FsYyg5M3ZoIC0gNWVtKTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICAgIC5wcm9qZWN0LWltZy1lbmQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGNhbGMoOTN2aCAtIDVlbSk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgICB9XG4gIH0gXG59XG5cbi5wYWdpbmF0aW9uIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRsZy1icmVhaykge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiA4dmg7XG4gICAgbGVmdDogY2FsYygyMHZ3ICsgNTVweCk7XG4gICAgYSB7XG4gICAgICBjb2xvcjogI0ZGRjtcbiAgICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgICAgb3BhY2l0eTogLjU7XG4gICAgfVxuICAgIGEuYWN0aXZlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG59XG5cblxuIiwiLmNvbnRhY3Qge1xuICBtYXJnaW46IDE1dmggYXV0byAwO1xuICBtYXgtd2lkdGg6IDI1ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iLCIuaW5mby1jb250YWluZXIge1xuICBwOmZpcnN0LWNoaWxkIHsgXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
